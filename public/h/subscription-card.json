{
  "name": "subscription-card",
  "type": "registry:ui",
  "version": "1.0.0",
  "description": "Subscription Card - A sleek, modern card for displaying subscription status with elegant glow effects for SaaS AI applications.",
  "lastUpdated": "2025-02-26T21:16:25.300Z",
  "registryDependencies": [
    "card",
    "progress"
  ],
  "dependencies": [
    "lucide-react",
    "class-variance-authority"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "subscription-card.tsx",
      "content": "/**\n * Subscription Card - A sleek, modern card for displaying subscription status\n * with elegant glow effects for SaaS AI applications.\n */\n\"use client\";\n\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport {\n  Card,\n  CardContent,\n  CardFooter,\n  CardHeader,\n} from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport {\n  CalendarDays,\n  CheckCircle2,\n  Clock,\n  CreditCard,\n  XCircle,\n  Zap,\n} from \"lucide-react\";\n\nconst subscriptionCardVariants = cva(\n  \"transition-all duration-200 relative overflow-visible\",\n  {\n    variants: {\n      status: {\n        active: \"\",\n        trial: \"\",\n        expired: \"\",\n        cancelled: \"\",\n        pastDue: \"\",\n      },\n      plan: {\n        free: \"\",\n        starter: \"\",\n        pro: \"\",\n        enterprise: \"\",\n        custom: \"\",\n      },\n      accentColor: {\n        blue: [\n          // Glow effect for light mode\n          \"data-[active=true]:shadow-[0_0_20px_1px_rgba(37,99,235,0.15)]\",\n          // Glow effect for dark mode\n          \"dark:data-[active=true]:shadow-[0_0_25px_2px_rgba(6,182,212,0.18)]\",\n          // Border colors\n          \"data-[active=true]:border-blue-200 dark:data-[active=true]:border-cyan-800\",\n          // Badge colors\n          \"[&_[data-plan-badge]]:bg-blue-500/90 [&_[data-plan-badge]]:text-white\",\n          // Progress bar colors\n          \"[&_[data-subscription-progress]]:bg-blue-100 dark:[&_[data-subscription-progress]]:bg-blue-950/50\",\n          \"[&_[data-subscription-progress-indicator]]:bg-blue-500\",\n        ],\n        purple: [\n          \"data-[active=true]:shadow-[0_0_20px_1px_rgba(126,34,206,0.15)]\",\n          \"dark:data-[active=true]:shadow-[0_0_25px_2px_rgba(147,51,234,0.18)]\",\n          \"data-[active=true]:border-purple-200 dark:data-[active=true]:border-purple-800\",\n          \"[&_[data-plan-badge]]:bg-purple-500/90 [&_[data-plan-badge]]:text-white\",\n          \"[&_[data-subscription-progress]]:bg-purple-100 dark:[&_[data-subscription-progress]]:bg-purple-950/50\",\n          \"[&_[data-subscription-progress-indicator]]:bg-purple-500\",\n        ],\n        green: [\n          \"data-[active=true]:shadow-[0_0_20px_1px_rgba(5,150,105,0.15)]\",\n          \"dark:data-[active=true]:shadow-[0_0_25px_2px_rgba(16,185,129,0.18)]\",\n          \"data-[active=true]:border-green-200 dark:data-[active=true]:border-green-800\",\n          \"[&_[data-plan-badge]]:bg-green-500/90 [&_[data-plan-badge]]:text-white\",\n          \"[&_[data-subscription-progress]]:bg-green-100 dark:[&_[data-subscription-progress]]:bg-green-950/50\",\n          \"[&_[data-subscription-progress-indicator]]:bg-green-500\",\n        ],\n        amber: [\n          \"data-[active=true]:shadow-[0_0_20px_1px_rgba(217,119,6,0.15)]\",\n          \"dark:data-[active=true]:shadow-[0_0_25px_2px_rgba(245,158,11,0.18)]\",\n          \"data-[active=true]:border-amber-200 dark:data-[active=true]:border-amber-800\",\n          \"[&_[data-plan-badge]]:bg-amber-500/90 [&_[data-plan-badge]]:text-white\",\n          \"[&_[data-subscription-progress]]:bg-amber-100 dark:[&_[data-subscription-progress]]:bg-amber-950/50\",\n          \"[&_[data-subscription-progress-indicator]]:bg-amber-500\",\n        ],\n        rose: [\n          \"data-[active=true]:shadow-[0_0_20px_1px_rgba(225,29,72,0.15)]\",\n          \"dark:data-[active=true]:shadow-[0_0_25px_2px_rgba(244,63,94,0.18)]\",\n          \"data-[active=true]:border-rose-200 dark:data-[active=true]:border-rose-800\",\n          \"[&_[data-plan-badge]]:bg-rose-500/90 [&_[data-plan-badge]]:text-white\",\n          \"[&_[data-subscription-progress]]:bg-rose-100 dark:[&_[data-subscription-progress]]:bg-rose-950/50\",\n          \"[&_[data-subscription-progress-indicator]]:bg-rose-500\",\n        ],\n      },\n      size: {\n        sm: \"max-w-[280px]\",\n        md: \"max-w-[350px]\",\n        lg: \"max-w-[420px]\",\n      },\n    },\n    defaultVariants: {\n      accentColor: \"blue\",\n      size: \"md\",\n    },\n  }\n);\n\n// Status badge variants\nconst statusBadgeVariants = cva(\n  \"inline-flex items-center gap-1.5 rounded-full px-2.5 py-1 text-xs font-medium\",\n  {\n    variants: {\n      status: {\n        active:\n          \"bg-green-100 text-green-700 dark:bg-green-950/60 dark:text-green-400 border border-green-200/50 dark:border-green-900/50\",\n        trial:\n          \"bg-blue-100 text-blue-700 dark:bg-blue-950/60 dark:text-blue-400 border border-blue-200/50 dark:border-blue-900/50\",\n        expired:\n          \"bg-rose-100 text-rose-700 dark:bg-rose-950/60 dark:text-rose-400 border border-rose-200/50 dark:border-rose-900/50\",\n        cancelled:\n          \"bg-amber-100 text-amber-700 dark:bg-amber-950/60 dark:text-amber-400 border border-amber-200/50 dark:border-amber-900/50\",\n        pastDue:\n          \"bg-red-100 text-red-700 dark:bg-red-950/60 dark:text-red-400 border border-red-200/50 dark:border-red-900/50\",\n      },\n    },\n    defaultVariants: {\n      status: \"active\",\n    },\n  }\n);\n\nexport interface SubscriptionCardProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof subscriptionCardVariants> {\n  /**\n   * Subscription status\n   */\n  status?: \"active\" | \"trial\" | \"expired\" | \"cancelled\" | \"pastDue\";\n\n  /**\n   * Plan name\n   */\n  planName: string;\n\n  /**\n   * Plan description\n   */\n  planDescription?: string;\n\n  /**\n   * Current usage (0-100)\n   */\n  usagePercentage?: number;\n\n  /**\n   * Usage label (e.g. \"5,000/10,000 credits used\")\n   */\n  usageLabel?: string;\n\n  /**\n   * Date information (renewal, expiry, etc.)\n   */\n  dateInfo?: string;\n\n  /**\n   * Action button\n   */\n  actionButton?: React.ReactNode;\n\n  /**\n   * Whether to show the glow effect\n   */\n  showGlow?: boolean;\n\n  /**\n   * Price information\n   */\n  priceInfo?: string;\n\n  /**\n   * Icon for the plan\n   */\n  planIcon?: React.ReactNode;\n}\n\nexport const SubscriptionCard = React.forwardRef<\n  HTMLDivElement,\n  SubscriptionCardProps\n>(\n  (\n    {\n      className,\n      status = \"active\",\n      plan,\n      accentColor,\n      size,\n      planName,\n      planDescription,\n      usagePercentage,\n      usageLabel,\n      dateInfo,\n      actionButton,\n      showGlow = true,\n      priceInfo,\n      planIcon,\n      ...props\n    },\n    ref\n  ) => {\n    // Map status to appropriate icon\n    const statusIcons = {\n      active: <CheckCircle2 className=\"size-3.5\" />,\n      trial: <Clock className=\"size-3.5\" />,\n      expired: <XCircle className=\"size-3.5\" />,\n      cancelled: <XCircle className=\"size-3.5\" />,\n      pastDue: <CreditCard className=\"size-3.5\" />,\n    };\n\n    // Map status to appropriate label\n    const statusLabels = {\n      active: \"Active\",\n      trial: \"Trial\",\n      expired: \"Expired\",\n      cancelled: \"Cancelled\",\n      pastDue: \"Past Due\",\n    };\n\n    // Default plan icon if not provided\n    const defaultPlanIcon = planIcon || <Zap className=\"size-4\" />;\n\n    return (\n      <Card\n        ref={ref}\n        data-active={showGlow}\n        className={cn(\n          subscriptionCardVariants({ status, plan, accentColor, size }),\n          \"border\",\n          className\n        )}\n        {...props}\n      >\n        <CardHeader className=\"pb-4\">\n          <div className=\"flex justify-between items-start mb-2\">\n            <div\n              data-plan-badge\n              className=\"inline-flex items-center gap-1.5 rounded-md px-2.5 py-1 text-xs font-medium\"\n            >\n              <span className=\"mr-1\">{defaultPlanIcon}</span>\n              {planName}\n            </div>\n\n            <div className={cn(statusBadgeVariants({ status }))}>\n              {statusIcons[status]}\n              <span>{statusLabels[status]}</span>\n            </div>\n          </div>\n\n          {planDescription && (\n            <p className=\"text-muted-foreground text-sm mt-2\">\n              {planDescription}\n            </p>\n          )}\n        </CardHeader>\n\n        <CardContent className=\"space-y-4 pb-4\">\n          {usagePercentage !== undefined && (\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-xs\">\n                <span className=\"text-muted-foreground font-medium\">Usage</span>\n                {usageLabel && (\n                  <span className=\"text-foreground font-medium\">\n                    {usageLabel}\n                  </span>\n                )}\n              </div>\n              <Progress\n                data-subscription-progress=\"true\"\n                value={usagePercentage}\n                className=\"h-1.5 bg-transparent\"\n              >\n                <div\n                  data-subscription-progress-indicator=\"true\"\n                  className=\"h-full\"\n                  style={{ width: `${usagePercentage}%` }}\n                />\n              </Progress>\n            </div>\n          )}\n\n          {(dateInfo || priceInfo) && (\n            <div className=\"pt-1 flex justify-between items-center text-sm\">\n              {dateInfo && (\n                <div className=\"flex items-center gap-1.5 text-muted-foreground\">\n                  <CalendarDays className=\"size-3.5 text-muted-foreground/70\" />\n                  <span>{dateInfo}</span>\n                </div>\n              )}\n\n              {priceInfo && <div className=\"font-medium\">{priceInfo}</div>}\n            </div>\n          )}\n        </CardContent>\n\n        {actionButton && (\n          <CardFooter className=\"pt-2\">{actionButton}</CardFooter>\n        )}\n      </Card>\n    );\n  }\n);\n\nSubscriptionCard.displayName = \"SubscriptionCard\";\n",
      "type": "registry:ui"
    }
  ]
}